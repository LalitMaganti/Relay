buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.12.+'
        classpath 'me.tatarka:gradle-retrolambda:2.2.1'
        classpath 'com.github.jcandksolutions.gradle:android-unit-test:1.+'
    }
}

apply plugin: 'com.android.library'
apply plugin: 'retrolambda'

repositories {
    mavenCentral()
}

android {
    compileSdkVersion 19
    buildToolsVersion '20.0.0'

    defaultConfig {
        applicationId "co.fusionx.relay"
        minSdkVersion 9
        targetSdkVersion 19
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}
apply plugin: 'android-unit-test'

dependencies {
    compile 'org.apache.commons:commons-lang3:3.+'
    compile 'com.google.guava:guava:18.+'
    compile 'net.sf.trove4j:trove4j:3.+'

    compile project(':bus-library')

    testCompile 'junit:junit:4.+'
    testCompile 'org.robolectric:robolectric:+'
    testCompile 'org.assertj:assertj-core:1.+'

    retrolambdaConfig 'net.orfjackal.retrolambda:retrolambda:+'
}

retrolambda {
    jdk System.getenv("JAVA8_HOME")
    oldJdk System.getenv("JAVA_HOME")
    javaVersion JavaVersion.VERSION_1_7
}

android.libraryVariants.all { variant ->
    task("generate${variant.name}Javadoc", type: Javadoc) {
        title = "$name $version API"
        description "Generates Javadoc for $variant.name."
        source = variant.javaCompile.source
        ext.androidJar =
                "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
        classpath = files(variant.javaCompile.classpath.files) + files(ext.androidJar)
        options.links("http://docs.oracle.com/javase/7/docs/api/");
        options.links("http://d.android.com/reference/");
        exclude '**/BuildConfig.java'
        exclude '**/R.java'
    }
}